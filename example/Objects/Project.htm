<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Thu Apr 10 23:12:14 2025
<BR><P>
<H3>Maximum Stack Usage =        448 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; CeruleanBird_EngineRender &rArr; Sprites_Exec &rArr; Sprites_SingleRender &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[65]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1f]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">ADC1_2_IRQHandler</a><BR>
 <LI><a href="#[9b]">ExecuteBehaviorTree</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9b]">ExecuteBehaviorTree</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1f]">ADC1_2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[7]">BusFault_Handler</a> from stm32f10x_it.o(i.BusFault_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[22]">CAN1_RX1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[23]">CAN1_SCE_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[40]">Celi_DefaultRender</a> from camera.o(i.Celi_DefaultRender) referenced from camera.o(i.Camera_Init)
 <LI><a href="#[18]">DMA1_Channel1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[19]">DMA1_Channel2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel4_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1c]">DMA1_Channel5_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1d]">DMA1_Channel6_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1e]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[a]">DebugMon_Handler</a> from stm32f10x_it.o(i.DebugMon_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[13]">EXTI0_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[35]">EXTI15_10_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[14]">EXTI1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[15]">EXTI2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[16]">EXTI3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[17]">EXTI4_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[24]">EXTI9_5_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[11]">FLASH_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[41]">Floor_DefaultRender</a> from camera.o(i.Floor_DefaultRender) referenced from camera.o(i.Camera_Init)
 <LI><a href="#[5]">HardFault_Handler</a> from stm32f10x_it.o(i.HardFault_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2d]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2c]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2f]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2e]">I2C2_EV_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[6]">MemManage_Handler</a> from stm32f10x_it.o(i.MemManage_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[4]">NMI_Handler</a> from stm32f10x_it.o(i.NMI_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[47]">OLED_BufferOutput</a> from m_stm32f103c8t6.o(i.OLED_BufferOutput) referenced from main.o(i.main)
 <LI><a href="#[48]">OLED_Clear</a> from m_stm32f103c8t6.o(i.OLED_Clear) referenced from main.o(i.main)
 <LI><a href="#[46]">OLED_Init</a> from m_stm32f103c8t6.o(i.OLED_Init) referenced from main.o(i.main)
 <LI><a href="#[e]">PVD_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[b]">PendSV_Handler</a> from stm32f10x_it.o(i.PendSV_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[12]">RCC_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[36]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[10]">RTC_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[3]">Reset_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[3c]">SBT_ExecuteHandle</a> from main.o(i.SBT_ExecuteHandle) referenced from main.o(i.BT_func)
 <LI><a href="#[3f]">SBT_ExecuteHandle2</a> from main.o(i.SBT_ExecuteHandle2) referenced from main.o(i.BT_func2)
 <LI><a href="#[45]">SBT_ExecuteHandle_4</a> from main.o(i.SBT_ExecuteHandle_4) referenced from main.o(i.function4)
 <LI><a href="#[3e]">SBT_ExecuteHandle_IT</a> from main.o(i.SBT_ExecuteHandle_IT) referenced from main.o(i.BT_func)
 <LI><a href="#[44]">SBT_ExecuteHandle_kun</a> from main.o(i.SBT_ExecuteHandle_kun) referenced from main.o(i.function3)
 <LI><a href="#[3d]">SIT_MapIndexHandle</a> from main.o(i.SIT_MapIndexHandle) referenced from main.o(i.BT_func)
 <LI><a href="#[30]">SPI1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[31]">SPI2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[42]">SSRAnim_Render</a> from camera.o(i.SSRAnim_Render) referenced from camera.o(i.SSRAnim_RenderEnable)
 <LI><a href="#[9]">SVC_Handler</a> from stm32f10x_it.o(i.SVC_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[43]">SpritesPrivateFreeHandle</a> from main.o(i.SpritesPrivateFreeHandle) referenced from main.o(i.function)
 <LI><a href="#[43]">SpritesPrivateFreeHandle</a> from main.o(i.SpritesPrivateFreeHandle) referenced from main.o(i.function2)
 <LI><a href="#[43]">SpritesPrivateFreeHandle</a> from main.o(i.SpritesPrivateFreeHandle) referenced from main.o(i.function3)
 <LI><a href="#[43]">SpritesPrivateFreeHandle</a> from main.o(i.SpritesPrivateFreeHandle) referenced from main.o(i.function4)
 <LI><a href="#[c]">SysTick_Handler</a> from stm32f10x_it.o(i.SysTick_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[38]">SystemInit</a> from system_stm32f10x.o(i.SystemInit) referenced from startup_stm32f10x_md.o(.text)
 <LI><a href="#[f]">TAMPER_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[25]">TIM1_BRK_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[28]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[27]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[26]">TIM1_UP_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[29]">TIM2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2a]">TIM3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2b]">TIM4_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[32]">USART1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[33]">USART2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[34]">USART3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[37]">USBWakeUp_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[20]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[21]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[8]">UsageFault_Handler</a> from stm32f10x_it.o(i.UsageFault_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[d]">WWDG_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[4b]">__main</a> from __main.o(!!!main) referenced from startup_stm32f10x_md.o(.text)
 <LI><a href="#[3b]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[3a]">_sputc</a> from _sputc.o(.text) referenced from noretval__2sprintf.o(.text)
 <LI><a href="#[4a]">frm</a> from main.o(i.frm) referenced from main.o(i.main)
 <LI><a href="#[49]">func2</a> from main.o(i.func2) referenced from main.o(i.main)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[4b]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[4c]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[4e]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[131]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[132]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[133]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[134]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[135]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[4f]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[5f]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[136]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[54]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[137]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[138]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[139]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[13a]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[13b]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[13c]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[13d]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[13e]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[13f]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[140]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[141]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[142]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[143]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[144]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[145]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[146]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[147]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[148]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[149]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[14a]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[14b]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[59]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[14c]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[14d]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[14e]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[14f]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[150]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[151]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[152]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[4d]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[153]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[51]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[53]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[154]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[55]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; CeruleanBird_EngineRender &rArr; Sprites_Exec &rArr; Sprites_SingleRender &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[155]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[66]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[58]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[156]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[5a]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[3]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[5c]"></a>__2sprintf</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, noretval__2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M_Int
</UL>

<P><STRONG><a name="[5e]"></a>__printf</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, __printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[50]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[a4]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M_String
</UL>

<P><STRONG><a name="[157]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[158]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[159]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[61]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[63]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tan
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[60]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[5d]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[3a]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noretval__2sprintf.o(.text)
</UL>
<P><STRONG><a name="[62]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[15a]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[15b]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[15c]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[64]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[15d]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[52]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[57]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[5b]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[15e]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[15f]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[67]"></a>AdjustInsert</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, rb_tree.o(i.AdjustInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AdjustInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rightRotate
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leftRotate
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbInsert
</UL>

<P><STRONG><a name="[160]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>BT_func</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, main.o(i.BT_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = BT_func &rArr; SpritesIT_Add &rArr; SpritesIT_RBStorageStrategyCreate &rArr; rbDelete &rArr; TreeDelete &rArr; DeleteRedLeafNode &rArr; c_free &rArr; verifyBlock &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesIT_Register
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesIT_Add
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesBT_MountToRoot
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesBT_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesBT_Action
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function
</UL>

<P><STRONG><a name="[70]"></a>BT_func2</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, main.o(i.BT_func2))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = BT_func2 &rArr; SpritesBT_Init &rArr; rbInsert &rArr; createNode &rArr; c_malloc &rArr; memory_pool_init &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesBT_MountToRoot
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesBT_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesBT_Action
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function2
</UL>

<P><STRONG><a name="[a9]"></a>Bit_Modification</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, mistink.o(i.Bit_Modification))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Bit_Modification
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MistinkPixel_Operate
</UL>

<P><STRONG><a name="[8e]"></a>Bit_Modify_Within_Byte</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, bit_operate.o(i.Bit_Modify_Within_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Bit_Modify_Within_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Canvas_PixelOperate
</UL>

<P><STRONG><a name="[7]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>Camera_BackMove</STRONG> (Thumb, 232 bytes, Stack size 56 bytes, camera.o(i.Camera_BackMove))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Camera_BackMove &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorldMap_GetWorldMap
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorldMap_GetCurrentMapPos
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorldMap_Extract
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[78]"></a>Camera_DeepBuffer_Read</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, camera.o(i.Camera_DeepBuffer_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Camera_DeepBuffer_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EngineFault_IllegalAccess_Handle
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_SingleRender
</UL>

<P><STRONG><a name="[7a]"></a>Camera_DeepBuffer_Write</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, camera.o(i.Camera_DeepBuffer_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Camera_DeepBuffer_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EngineFault_IllegalAccess_Handle
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Render
</UL>

<P><STRONG><a name="[7b]"></a>Camera_ForwardMove</STRONG> (Thumb, 232 bytes, Stack size 56 bytes, camera.o(i.Camera_ForwardMove))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Camera_ForwardMove &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorldMap_GetWorldMap
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorldMap_GetCurrentMapPos
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorldMap_Extract
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7d]"></a>Camera_GetPos</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, camera.o(i.Camera_GetPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Camera_GetPos
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EngineFault_NullPointerGuard_Handle
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7f]"></a>Camera_Init</STRONG> (Thumb, 434 bytes, Stack size 64 bytes, camera.o(i.Camera_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = Camera_Init &rArr; tan &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vector_Normalize
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vector_Create
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_malloc
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tan
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>Camera_Render</STRONG> (Thumb, 1202 bytes, Stack size 192 bytes, camera.o(i.Camera_Render))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = Camera_Render &rArr; Canvas_PixelOperate &rArr; Bit_Modify_Within_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorldMap_GetWorldMap
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorldMap_GetCurrentMapPos
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorldMap_Extract
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Texture_GetTexture
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Texture_Extract
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Canvas_PixelOperate
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_DeepBuffer_Write
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CeruleanBird_EngineRender
</UL>

<P><STRONG><a name="[8d]"></a>Canvas_GetUnit</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, canvas.o(i.Canvas_GetUnit))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Canvas_PixelOperate
</UL>

<P><STRONG><a name="[8c]"></a>Canvas_PixelOperate</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, canvas.o(i.Canvas_PixelOperate))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Canvas_PixelOperate &rArr; Bit_Modify_Within_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Canvas_GetUnit
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bit_Modify_Within_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSRAnim_Render
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Floor_DefaultRender
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Render
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_SingleRender
</UL>

<P><STRONG><a name="[104]"></a>Canvas_SetCanvasModeToRedirect</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, canvas.o(i.Canvas_SetCanvasModeToRedirect))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[40]"></a>Celi_DefaultRender</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, camera.o(i.Celi_DefaultRender))
<BR>[Address Reference Count : 1]<UL><LI> camera.o(i.Camera_Init)
</UL>
<P><STRONG><a name="[8f]"></a>CeruleanBird_EngineRender</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, ceruleanbird.o(i.CeruleanBird_EngineRender))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = CeruleanBird_EngineRender &rArr; Sprites_Exec &rArr; Sprites_SingleRender &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_Exec
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmRS_deltaTime_Trigger
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSRAnim_Exec
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Render
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>DeleteBlackLeafNodeWithRedSibling</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, rb_tree.o(i.DeleteBlackLeafNodeWithRedSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DeleteBlackLeafNodeWithRedSibling
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotateRight
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotateLeft
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TreeDelete
</UL>

<P><STRONG><a name="[96]"></a>DeleteNodeWithOneChild</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, rb_tree.o(i.DeleteNodeWithOneChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = DeleteNodeWithOneChild &rArr; c_free &rArr; verifyBlock &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_free
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TreeDelete
</UL>

<P><STRONG><a name="[98]"></a>DeleteRedLeafNode</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, rb_tree.o(i.DeleteRedLeafNode))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = DeleteRedLeafNode &rArr; c_free &rArr; verifyBlock &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_free
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TreeDelete
</UL>

<P><STRONG><a name="[99]"></a>DeleteWhenHasRedNephews</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, rb_tree.o(i.DeleteWhenHasRedNephews))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DeleteWhenHasRedNephews
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotateRight
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotateLeft
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NodeColor
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TreeDelete
</UL>

<P><STRONG><a name="[d9]"></a>EngineFault_ExceptionEnumParam_Handle</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, enginefault.o(i.EngineFault_ExceptionEnumParam_Handle))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_SingleUpdate
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesPhased_Exec
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesIT_Exec
</UL>

<P><STRONG><a name="[79]"></a>EngineFault_IllegalAccess_Handle</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, enginefault.o(i.EngineFault_IllegalAccess_Handle))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_realloc
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorldMap_Extract
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_DeepBuffer_Write
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_DeepBuffer_Read
</UL>

<P><STRONG><a name="[f5]"></a>EngineFault_IllegalFree_Handle</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, enginefault.o(i.EngineFault_IllegalFree_Handle))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_free
</UL>

<P><STRONG><a name="[7e]"></a>EngineFault_NullPointerGuard_Handle</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, enginefault.o(i.EngineFault_NullPointerGuard_Handle))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmRS_deltaTime_Trigger
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorldMap_Extract
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Texture_Extract
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorldMap_Add
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Texture_Add
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_collisionWallValue
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesData_GetPos
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSRAnim_Update
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmRS_GetFrmRate
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_GetPos
</UL>

<P><STRONG><a name="[9b]"></a>ExecuteBehaviorTree</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, sprites_behaviortree.o(i.ExecuteBehaviorTree))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = ExecuteBehaviorTree &rArr;  ExecuteBehaviorTree (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesPriv_Get
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_BT_GetChild
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExecuteBehaviorTree
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesBT_BusExecute
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExecuteBehaviorTree
</UL>

<P><STRONG><a name="[9e]"></a>FindTargetNode</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, rb_tree.o(i.FindTargetNode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FindTargetNode
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleNodeWithTwoChildren
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TreeDelete
</UL>

<P><STRONG><a name="[41]"></a>Floor_DefaultRender</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, camera.o(i.Floor_DefaultRender))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Floor_DefaultRender &rArr; Canvas_PixelOperate &rArr; Bit_Modify_Within_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Canvas_PixelOperate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> camera.o(i.Camera_Init)
</UL>
<P><STRONG><a name="[a5]"></a>Font_Read</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, mistink.o(i.Font_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Font_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M_String
</UL>

<P><STRONG><a name="[a0]"></a>FrmRS_GetFrmRate</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, frameratestrategy.o(i.FrmRS_GetFrmRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FrmRS_GetFrmRate &rArr; __aeabi_cdcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EngineFault_NullPointerGuard_Handle
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a1]"></a>FrmRS_deltaTime_Init</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, frameratestrategy.o(i.FrmRS_deltaTime_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FrmRS_deltaTime_Init &rArr; c_malloc &rArr; memory_pool_init &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[90]"></a>FrmRS_deltaTime_Trigger</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, frameratestrategy.o(i.FrmRS_deltaTime_Trigger))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = FrmRS_deltaTime_Trigger &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EngineFault_NullPointerGuard_Handle
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CeruleanBird_EngineRender
</UL>

<P><STRONG><a name="[af]"></a>GPIO_Init</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Port_Init
</UL>

<P><STRONG><a name="[ac]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Port_Init
</UL>

<P><STRONG><a name="[ad]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Port_Init
</UL>

<P><STRONG><a name="[9f]"></a>HandleNodeWithTwoChildren</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rb_tree.o(i.HandleNodeWithTwoChildren))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindTargetNode
</UL>

<P><STRONG><a name="[5]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[a2]"></a>M_Int</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, mistink.o(i.M_Int))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = M_Int &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M_String
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a3]"></a>M_String</STRONG> (Thumb, 216 bytes, Stack size 80 bytes, mistink.o(i.M_String))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = M_String &rArr; MistinkPixel_Operate &rArr; Bit_Modification
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MistinkPixel_Operate
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M_Int
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[102]"></a>MistinkDisplayer_BufferOutput</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, mistink_displayer.o(i.MistinkDisplayer_BufferOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MistinkDisplayer_BufferOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a7]"></a>MistinkDisplayer_Create</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, mistink_displayer.o(i.MistinkDisplayer_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = MistinkDisplayer_Create &rArr; c_malloc &rArr; memory_pool_init &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_pool_init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[106]"></a>MistinkOP_BufferReset</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, mistink.o(i.MistinkOP_BufferReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MistinkOP_BufferReset
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[103]"></a>MistinkOP_GetBufferAPI</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mistink.o(i.MistinkOP_GetBufferAPI))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a6]"></a>MistinkPixel_Operate</STRONG> (Thumb, 92 bytes, Stack size 28 bytes, mistink.o(i.MistinkPixel_Operate))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = MistinkPixel_Operate &rArr; Bit_Modification
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bit_Modification
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M_String
</UL>

<P><STRONG><a name="[4]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[9a]"></a>NodeColor</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rb_tree.o(i.NodeColor))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TreeDelete
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteWhenHasRedNephews
</UL>

<P><STRONG><a name="[47]"></a>OLED_BufferOutput</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, m_stm32f103c8t6.o(i.OLED_BufferOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OLED_BufferOutput &rArr; OLED_WR_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[48]"></a>OLED_Clear</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, m_stm32f103c8t6.o(i.OLED_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OLED_Clear &rArr; OLED_WR_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[46]"></a>OLED_Init</STRONG> (Thumb, 236 bytes, Stack size 8 bytes, m_stm32f103c8t6.o(i.OLED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = OLED_Init &rArr; OLED_Port_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Port_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[ab]"></a>OLED_Port_Init</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, m_stm32f103c8t6.o(i.OLED_Port_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = OLED_Port_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
</UL>

<P><STRONG><a name="[aa]"></a>OLED_WR_Byte</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, m_stm32f103c8t6.o(i.OLED_WR_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OLED_WR_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_BufferOutput
</UL>

<P><STRONG><a name="[b]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[f8]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frm
</UL>

<P><STRONG><a name="[ae]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Port_Init
</UL>

<P><STRONG><a name="[3c]"></a>SBT_ExecuteHandle</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, main.o(i.SBT_ExecuteHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = SBT_ExecuteHandle &rArr; SpritesMov_Left &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_Left
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_Update
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.BT_func)
</UL>
<P><STRONG><a name="[3f]"></a>SBT_ExecuteHandle2</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, main.o(i.SBT_ExecuteHandle2))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = SBT_ExecuteHandle2 &rArr; SpritesMov_Right &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_Awaken
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_Right
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_Left
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_Update
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.BT_func2)
</UL>
<P><STRONG><a name="[45]"></a>SBT_ExecuteHandle_4</STRONG> (Thumb, 420 bytes, Stack size 96 bytes, main.o(i.SBT_ExecuteHandle_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = SBT_ExecuteHandle_4 &rArr; SpritesMov_Forward &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_collisionWallValue
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_Sleep
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_Forward
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesData_GetPos
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_Update
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.function4)
</UL>
<P><STRONG><a name="[3e]"></a>SBT_ExecuteHandle_IT</STRONG> (Thumb, 58 bytes, Stack size 40 bytes, main.o(i.SBT_ExecuteHandle_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = SBT_ExecuteHandle_IT &rArr; SpritesMov_Right &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_Right
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesData_GetPos
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_Update
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.BT_func)
</UL>
<P><STRONG><a name="[44]"></a>SBT_ExecuteHandle_kun</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, main.o(i.SBT_ExecuteHandle_kun))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SBT_ExecuteHandle_kun &rArr; SpritesAnim_Update &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_Update
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.function3)
</UL>
<P><STRONG><a name="[3d]"></a>SIT_MapIndexHandle</STRONG> (Thumb, 48 bytes, Stack size 40 bytes, main.o(i.SIT_MapIndexHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SIT_MapIndexHandle &rArr; SpritesData_GetPos
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesData_GetPos
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.BT_func)
</UL>
<P><STRONG><a name="[b1]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Port_Init
</UL>

<P><STRONG><a name="[b2]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
</UL>

<P><STRONG><a name="[b3]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
</UL>

<P><STRONG><a name="[b0]"></a>SPI_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Port_Init
</UL>

<P><STRONG><a name="[92]"></a>SSRAnim_Exec</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, camera.o(i.SSRAnim_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SSRAnim_Exec
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CeruleanBird_EngineRender
</UL>

<P><STRONG><a name="[bd]"></a>SSRAnim_FrmAdd</STRONG> (Thumb, 320 bytes, Stack size 72 bytes, camera.o(i.SSRAnim_FrmAdd))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = SSRAnim_FrmAdd &rArr; c_free &rArr; verifyBlock &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_malloc
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_free
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c1]"></a>SSRAnim_FrmExtract</STRONG> (Thumb, 150 bytes, Stack size 20 bytes, camera.o(i.SSRAnim_FrmExtract))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SSRAnim_FrmExtract
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSRAnim_Render
</UL>

<P><STRONG><a name="[bf]"></a>SSRAnim_ManagerCreate</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, camera.o(i.SSRAnim_ManagerCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = SSRAnim_ManagerCreate &rArr; rbInsert &rArr; createNode &rArr; c_malloc &rArr; memory_pool_init &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbInsert
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_malloc
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_free
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[42]"></a>SSRAnim_Render</STRONG> (Thumb, 204 bytes, Stack size 64 bytes, camera.o(i.SSRAnim_Render))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SSRAnim_Render &rArr; Canvas_PixelOperate &rArr; Bit_Modify_Within_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Canvas_PixelOperate
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSRAnim_FrmExtract
</UL>
<BR>[Address Reference Count : 1]<UL><LI> camera.o(i.SSRAnim_RenderEnable)
</UL>
<P><STRONG><a name="[10a]"></a>SSRAnim_RenderEnable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, camera.o(i.SSRAnim_RenderEnable))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10e]"></a>SSRAnim_ResetSingle</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, camera.o(i.SSRAnim_ResetSingle))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10b]"></a>SSRAnim_SetPos</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, camera.o(i.SSRAnim_SetPos))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c2]"></a>SSRAnim_Update</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, camera.o(i.SSRAnim_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SSRAnim_Update &rArr; __aeabi_dsub
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EngineFault_NullPointerGuard_Handle
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c3]"></a>SSR_SetCameraExecAnim</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, camera.o(i.SSR_SetCameraExecAnim))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SSR_SetCameraExecAnim
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[c6]"></a>SpritesAnim_CreateManager</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, sprites_animation.o(i.SpritesAnim_CreateManager))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SpritesAnim_CreateManager &rArr; rbInsert &rArr; createNode &rArr; c_malloc &rArr; memory_pool_init &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbInsert
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_malloc
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_free
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesTree_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c8]"></a>SpritesAnim_CreateNewChain</STRONG> (Thumb, 310 bytes, Stack size 40 bytes, sprites_animation.o(i.SpritesAnim_CreateNewChain))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = SpritesAnim_CreateNewChain &rArr; c_realloc &rArr; c_free &rArr; verifyBlock &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_realloc
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bitToByte
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e5]"></a>SpritesAnim_ExtractFrmData</STRONG> (Thumb, 184 bytes, Stack size 20 bytes, sprites_animation.o(i.SpritesAnim_ExtractFrmData))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SpritesAnim_ExtractFrmData
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_SingleRender
</UL>

<P><STRONG><a name="[cb]"></a>SpritesAnim_InsertNewFrm</STRONG> (Thumb, 322 bytes, Stack size 56 bytes, sprites_animation.o(i.SpritesAnim_InsertNewFrm))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SpritesAnim_InsertNewFrm &rArr; c_free &rArr; verifyBlock &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_malloc
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_free
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[107]"></a>SpritesAnim_SetAnimType</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sprites_animation.o(i.SpritesAnim_SetAnimType))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[108]"></a>SpritesAnim_SwitchChain</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, sprites_animation.o(i.SpritesAnim_SwitchChain))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SpritesAnim_SwitchChain
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b5]"></a>SpritesAnim_Update</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, sprites_animation.o(i.SpritesAnim_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SpritesAnim_Update &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SBT_ExecuteHandle_kun
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SBT_ExecuteHandle_IT
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SBT_ExecuteHandle_4
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SBT_ExecuteHandle2
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SBT_ExecuteHandle
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_SingleUpdate
</UL>

<P><STRONG><a name="[6c]"></a>SpritesBT_Action</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, sprites_behaviortree.o(i.SpritesBT_Action))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SpritesBT_Action &rArr; Sprites_BT_LCNodeCreate &rArr; c_malloc &rArr; memory_pool_init &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_BT_LCNodeCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function4
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function3
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_func2
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_func
</UL>

<P><STRONG><a name="[d3]"></a>SpritesBT_BusExecute</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, sprites_behaviortree.o(i.SpritesBT_BusExecute))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SpritesBT_BusExecute &rArr; SpritesIT_Exec &rArr; SpritesIT_GetITNode
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesPhased_Exec
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesIT_Exec
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExecuteBehaviorTree
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_SingleUpdate
</UL>

<P><STRONG><a name="[6b]"></a>SpritesBT_Init</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, sprites_behaviortree.o(i.SpritesBT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = SpritesBT_Init &rArr; rbInsert &rArr; createNode &rArr; c_malloc &rArr; memory_pool_init &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbInsert
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_malloc
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_free
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function4
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function3
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_func2
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_func
</UL>

<P><STRONG><a name="[6d]"></a>SpritesBT_MountToRoot</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, sprites_behaviortree.o(i.SpritesBT_MountToRoot))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SpritesBT_MountToRoot
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function4
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function3
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_func2
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_func
</UL>

<P><STRONG><a name="[b8]"></a>SpritesData_GetPos</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, sprites_logical.o(i.SpritesData_GetPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SpritesData_GetPos
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EngineFault_NullPointerGuard_Handle
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIT_MapIndexHandle
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SBT_ExecuteHandle_IT
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SBT_ExecuteHandle_4
</UL>

<P><STRONG><a name="[109]"></a>SpritesData_SetVerticalHeight</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sprites_logical.o(i.SpritesData_SetVerticalHeight))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6f]"></a>SpritesIT_Add</STRONG> (Thumb, 330 bytes, Stack size 40 bytes, sprites_behaviortree.o(i.SpritesIT_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = SpritesIT_Add &rArr; SpritesIT_RBStorageStrategyCreate &rArr; rbDelete &rArr; TreeDelete &rArr; DeleteRedLeafNode &rArr; c_free &rArr; verifyBlock &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbInsert
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_malloc
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_free
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesIT_RBStorageStrategyCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_func
</UL>

<P><STRONG><a name="[d7]"></a>SpritesIT_Enable</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, sprites_behaviortree.o(i.SpritesIT_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SpritesIT_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d4]"></a>SpritesIT_Exec</STRONG> (Thumb, 242 bytes, Stack size 32 bytes, sprites_behaviortree.o(i.SpritesIT_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SpritesIT_Exec &rArr; SpritesIT_GetITNode
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesPriv_Get
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EngineFault_ExceptionEnumParam_Handle
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesIT_GetITNode
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesBT_BusExecute
</UL>

<P><STRONG><a name="[d8]"></a>SpritesIT_GetITNode</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, sprites_behaviortree.o(i.SpritesIT_GetITNode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SpritesIT_GetITNode
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesIT_Exec
</UL>

<P><STRONG><a name="[d6]"></a>SpritesIT_RBStorageStrategyCreate</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, sprites_behaviortree.o(i.SpritesIT_RBStorageStrategyCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = SpritesIT_RBStorageStrategyCreate &rArr; rbDelete &rArr; TreeDelete &rArr; DeleteRedLeafNode &rArr; c_free &rArr; verifyBlock &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbInsert
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_malloc
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_free
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbDelete
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesIT_Add
</UL>

<P><STRONG><a name="[6e]"></a>SpritesIT_Register</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, sprites_behaviortree.o(i.SpritesIT_Register))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SpritesIT_Register &rArr; c_free &rArr; verifyBlock &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_malloc
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_free
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_func
</UL>

<P><STRONG><a name="[bb]"></a>SpritesMov_Forward</STRONG> (Thumb, 236 bytes, Stack size 56 bytes, sprites_logical.o(i.SpritesMov_Forward))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SpritesMov_Forward &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorldMap_GetWorldMap
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorldMap_GetCurrentMapPos
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorldMap_Extract
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SBT_ExecuteHandle_4
</UL>

<P><STRONG><a name="[b4]"></a>SpritesMov_Left</STRONG> (Thumb, 256 bytes, Stack size 80 bytes, sprites_logical.o(i.SpritesMov_Left))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SpritesMov_Left &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorldMap_GetWorldMap
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorldMap_GetCurrentMapPos
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorldMap_Extract
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SBT_ExecuteHandle2
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SBT_ExecuteHandle
</UL>

<P><STRONG><a name="[b6]"></a>SpritesMov_Right</STRONG> (Thumb, 256 bytes, Stack size 80 bytes, sprites_logical.o(i.SpritesMov_Right))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SpritesMov_Right &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorldMap_GetWorldMap
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorldMap_GetCurrentMapPos
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorldMap_Extract
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SBT_ExecuteHandle_IT
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SBT_ExecuteHandle2
</UL>

<P><STRONG><a name="[db]"></a>SpritesMov_SetDir</STRONG> (Thumb, 112 bytes, Stack size 48 bytes, sprites_logical.o(i.SpritesMov_SetDir))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = SpritesMov_SetDir &rArr; vector_Normalize &rArr; vector_Scalar_Div &rArr; vector_Create
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vector_Normalize
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function4
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function3
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function2
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function
</UL>

<P><STRONG><a name="[105]"></a>SpritesMov_SetDirWithCamera</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, sprites_logical.o(i.SpritesMov_SetDirWithCamera))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SpritesMov_SetDirWithCamera
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10d]"></a>SpritesMov_SetPosToCamera</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, sprites_logical.o(i.SpritesMov_SetPosToCamera))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d5]"></a>SpritesPhased_Exec</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, sprites_behaviortree.o(i.SpritesPhased_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SpritesPhased_Exec
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesPriv_Get
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EngineFault_ExceptionEnumParam_Handle
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesBT_BusExecute
</UL>

<P><STRONG><a name="[fe]"></a>SpritesPriv_Add</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sprites_logical.o(i.SpritesPriv_Add))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function4
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function3
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function2
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function
</UL>

<P><STRONG><a name="[9c]"></a>SpritesPriv_Get</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sprites_logical.o(i.SpritesPriv_Get))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesPhased_Exec
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesIT_Exec
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExecuteBehaviorTree
</UL>

<P><STRONG><a name="[43]"></a>SpritesPrivateFreeHandle</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, main.o(i.SpritesPrivateFreeHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SpritesPrivateFreeHandle &rArr; c_free &rArr; verifyBlock &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_free
</UL>
<BR>[Address Reference Count : 4]<UL><LI> main.o(i.function)
<LI> main.o(i.function2)
<LI> main.o(i.function3)
<LI> main.o(i.function4)
</UL>
<P><STRONG><a name="[dc]"></a>SpritesStatic_ObjectCreate</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, sprites_logical.o(i.SpritesStatic_ObjectCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = SpritesStatic_ObjectCreate &rArr; SpritesTree_StaticAdd &rArr; c_malloc &rArr; memory_pool_init &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_malloc
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_free
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesTree_StaticAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[de]"></a>SpritesTree_Add</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, sprites_logical.o(i.SpritesTree_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SpritesTree_Add &rArr; c_malloc &rArr; memory_pool_init &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_ObjectCreate
</UL>

<P><STRONG><a name="[c7]"></a>SpritesTree_Init</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, sprites_logical.o(i.SpritesTree_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SpritesTree_Init &rArr; c_free &rArr; verifyBlock &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_malloc
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_free
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_CreateManager
</UL>

<P><STRONG><a name="[e1]"></a>SpritesTree_NodeExtract</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, sprites_logical.o(i.SpritesTree_NodeExtract))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SpritesTree_NodeExtract
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_Sleep
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_Awaken
</UL>

<P><STRONG><a name="[df]"></a>SpritesTree_Sort</STRONG> (Thumb, 368 bytes, Stack size 88 bytes, sprites_logical.o(i.SpritesTree_Sort))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = SpritesTree_Sort &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_Exec
</UL>

<P><STRONG><a name="[dd]"></a>SpritesTree_StaticAdd</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, sprites_logical.o(i.SpritesTree_StaticAdd))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SpritesTree_StaticAdd &rArr; c_malloc &rArr; memory_pool_init &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesStatic_ObjectCreate
</UL>

<P><STRONG><a name="[b7]"></a>Sprites_Awaken</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, sprites_logical.o(i.Sprites_Awaken))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Sprites_Awaken &rArr; SpritesTree_NodeExtract
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesTree_NodeExtract
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SBT_ExecuteHandle2
</UL>

<P><STRONG><a name="[9d]"></a>Sprites_BT_GetChild</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, sprites_behaviortree.o(i.Sprites_BT_GetChild))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExecuteBehaviorTree
</UL>

<P><STRONG><a name="[d2]"></a>Sprites_BT_LCNodeCreate</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, sprites_behaviortree.o(i.Sprites_BT_LCNodeCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Sprites_BT_LCNodeCreate &rArr; c_malloc &rArr; memory_pool_init &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesBT_Action
</UL>

<P><STRONG><a name="[91]"></a>Sprites_Exec</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, sprites_logical.o(i.Sprites_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = Sprites_Exec &rArr; Sprites_SingleRender &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_SingleUpdate
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_SingleRender
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesTree_Sort
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CeruleanBird_EngineRender
</UL>

<P><STRONG><a name="[e4]"></a>Sprites_ObjectCreate</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, sprites_logical.o(i.Sprites_ObjectCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Sprites_ObjectCreate &rArr; SpritesTree_Add &rArr; c_malloc &rArr; memory_pool_init &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_malloc
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_free
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesTree_Add
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function4
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function3
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function2
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function
</UL>

<P><STRONG><a name="[e3]"></a>Sprites_SingleRender</STRONG> (Thumb, 1328 bytes, Stack size 208 bytes, sprites_logical.o(i.Sprites_SingleRender))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = Sprites_SingleRender &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Canvas_PixelOperate
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_DeepBuffer_Read
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_ExtractFrmData
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_Exec
</UL>

<P><STRONG><a name="[e2]"></a>Sprites_SingleUpdate</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, sprites_logical.o(i.Sprites_SingleUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Sprites_SingleUpdate &rArr; SpritesBT_BusExecute &rArr; SpritesIT_Exec &rArr; SpritesIT_GetITNode
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_Update
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesBT_BusExecute
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EngineFault_ExceptionEnumParam_Handle
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_Exec
</UL>

<P><STRONG><a name="[ba]"></a>Sprites_Sleep</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, sprites_logical.o(i.Sprites_Sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Sprites_Sleep &rArr; SpritesTree_NodeExtract
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesTree_NodeExtract
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SBT_ExecuteHandle_4
</UL>

<P><STRONG><a name="[bc]"></a>Sprites_collisionWallValue</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, sprites_logical.o(i.Sprites_collisionWallValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Sprites_collisionWallValue
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EngineFault_NullPointerGuard_Handle
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SBT_ExecuteHandle_4
</UL>

<P><STRONG><a name="[c]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(.text)
</UL>
<P><STRONG><a name="[fa]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frm
</UL>

<P><STRONG><a name="[fb]"></a>TIM_GetCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_GetCounter))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;func2
</UL>

<P><STRONG><a name="[fc]"></a>TIM_SetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetCounter))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;func2
</UL>

<P><STRONG><a name="[f9]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frm
</UL>

<P><STRONG><a name="[e6]"></a>Texture_Add</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, texturemapper.o(i.Texture_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Texture_Add &rArr; rbInsert &rArr; createNode &rArr; c_malloc &rArr; memory_pool_init &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_pool_init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbInsert
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EngineFault_NullPointerGuard_Handle
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bitToByte
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_malloc
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_free
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8b]"></a>Texture_Extract</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, texturemapper.o(i.Texture_Extract))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Texture_Extract
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EngineFault_NullPointerGuard_Handle
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Render
</UL>

<P><STRONG><a name="[8a]"></a>Texture_GetTexture</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, texturemapper.o(i.Texture_GetTexture))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Texture_GetTexture
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Render
</UL>

<P><STRONG><a name="[e7]"></a>TreeDelete</STRONG> (Thumb, 270 bytes, Stack size 24 bytes, rb_tree.o(i.TreeDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = TreeDelete &rArr; DeleteRedLeafNode &rArr; c_free &rArr; verifyBlock &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_free
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getRoot
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brotherNode
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NodeColor
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindTargetNode
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteWhenHasRedNephews
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteRedLeafNode
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteNodeWithOneChild
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBlackLeafNodeWithRedSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbDelete
</UL>

<P><STRONG><a name="[8]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[ea]"></a>WorldMap_Add</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, worldmap.o(i.WorldMap_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = WorldMap_Add &rArr; rbInsert &rArr; createNode &rArr; c_malloc &rArr; memory_pool_init &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_pool_init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbInsert
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EngineFault_NullPointerGuard_Handle
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_malloc
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_free
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[77]"></a>WorldMap_Extract</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, worldmap.o(i.WorldMap_Extract))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WorldMap_Extract
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EngineFault_NullPointerGuard_Handle
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EngineFault_IllegalAccess_Handle
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Render
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_Right
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_Left
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_Forward
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_ForwardMove
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_BackMove
</UL>

<P><STRONG><a name="[72]"></a>WorldMap_GetCurrentMapPos</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, worldmap.o(i.WorldMap_GetCurrentMapPos))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Render
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_Right
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_Left
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_Forward
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_ForwardMove
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_BackMove
</UL>

<P><STRONG><a name="[73]"></a>WorldMap_GetWorldMap</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, worldmap.o(i.WorldMap_GetWorldMap))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WorldMap_GetWorldMap
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Render
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_Right
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_Left
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_Forward
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_ForwardMove
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_BackMove
</UL>

<P><STRONG><a name="[f0]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
</UL>

<P><STRONG><a name="[eb]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 828 bytes, Stack size 128 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tan
</UL>

<P><STRONG><a name="[ee]"></a>__kernel_poly</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
</UL>

<P><STRONG><a name="[ef]"></a>__kernel_tan</STRONG> (Thumb, 586 bytes, Stack size 80 bytes, tan_i.o(i.__kernel_tan))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = __kernel_tan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tan
</UL>

<P><STRONG><a name="[f2]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tan
</UL>

<P><STRONG><a name="[f3]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tan
</UL>

<P><STRONG><a name="[f1]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
</UL>

<P><STRONG><a name="[c9]"></a>bitToByte</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, bit_operate.o(i.bitToByte))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Texture_Add
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_CreateNewChain
</UL>

<P><STRONG><a name="[e9]"></a>brotherNode</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rb_tree.o(i.brotherNode))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TreeDelete
</UL>

<P><STRONG><a name="[97]"></a>c_free</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, heap_solution_1.o(i.c_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = c_free &rArr; verifyBlock &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EngineFault_IllegalFree_Handle
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verifyBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_realloc
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorldMap_Add
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Texture_Add
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_ObjectCreate
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesStatic_ObjectCreate
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesIT_Register
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesIT_Add
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesBT_Init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_InsertNewFrm
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_CreateManager
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSRAnim_ManagerCreate
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSRAnim_FrmAdd
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesPrivateFreeHandle
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesTree_Init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TreeDelete
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteRedLeafNode
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteNodeWithOneChild
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesIT_RBStorageStrategyCreate
</UL>

<P><STRONG><a name="[82]"></a>c_malloc</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, heap_solution_1.o(i.c_malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = c_malloc &rArr; memory_pool_init &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_crc8
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_pool_init
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_realloc
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorldMap_Add
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Texture_Add
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_ObjectCreate
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesStatic_ObjectCreate
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesIT_Register
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesIT_Add
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesBT_Init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_InsertNewFrm
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_CreateNewChain
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_CreateManager
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSRAnim_ManagerCreate
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSRAnim_FrmAdd
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MistinkDisplayer_Create
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmRS_deltaTime_Init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Init
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function4
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function3
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function2
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesTree_StaticAdd
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesTree_Add
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesTree_Init
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createNode
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_BT_LCNodeCreate
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesIT_RBStorageStrategyCreate
</UL>

<P><STRONG><a name="[ca]"></a>c_realloc</STRONG> (Thumb, 336 bytes, Stack size 40 bytes, heap_solution_1.o(i.c_realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = c_realloc &rArr; c_free &rArr; verifyBlock &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verifyBlock
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_crc8
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EngineFault_IllegalAccess_Handle
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_malloc
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_free
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_CreateNewChain
</UL>

<P><STRONG><a name="[f6]"></a>calculate_crc8</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, heap_solution_1.o(i.calculate_crc8))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = calculate_crc8
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verifyBlock
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_realloc
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_pool_init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_malloc
</UL>

<P><STRONG><a name="[f7]"></a>createNode</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, rb_tree.o(i.createNode))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = createNode &rArr; c_malloc &rArr; memory_pool_init &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbInsert
</UL>

<P><STRONG><a name="[4a]"></a>frm</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, main.o(i.frm))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = frm
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[49]"></a>func2</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, main.o(i.func2))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = func2 &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCounter
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[fd]"></a>function</STRONG> (Thumb, 130 bytes, Stack size 72 bytes, main.o(i.function))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = function &rArr; SpritesMov_SetDir &rArr; vector_Normalize &rArr; vector_Scalar_Div &rArr; vector_Create
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_malloc
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_ObjectCreate
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesPriv_Add
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_SetDir
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_func
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ff]"></a>function2</STRONG> (Thumb, 130 bytes, Stack size 72 bytes, main.o(i.function2))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = function2 &rArr; SpritesMov_SetDir &rArr; vector_Normalize &rArr; vector_Scalar_Div &rArr; vector_Create
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_malloc
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_ObjectCreate
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesPriv_Add
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_SetDir
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_func2
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[100]"></a>function3</STRONG> (Thumb, 136 bytes, Stack size 72 bytes, main.o(i.function3))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = function3 &rArr; SpritesMov_SetDir &rArr; vector_Normalize &rArr; vector_Scalar_Div &rArr; vector_Create
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_malloc
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_ObjectCreate
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesPriv_Add
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_SetDir
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesBT_MountToRoot
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesBT_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesBT_Action
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[101]"></a>function4</STRONG> (Thumb, 140 bytes, Stack size 72 bytes, main.o(i.function4))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = function4 &rArr; SpritesMov_SetDir &rArr; vector_Normalize &rArr; vector_Scalar_Div &rArr; vector_Create
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_malloc
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_ObjectCreate
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesPriv_Add
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_SetDir
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesBT_MountToRoot
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesBT_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesBT_Action
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e8]"></a>getRoot</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rb_tree.o(i.getRoot))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TreeDelete
</UL>

<P><STRONG><a name="[68]"></a>leftRotate</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, rb_tree.o(i.leftRotate))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustInsert
</UL>

<P><STRONG><a name="[56]"></a>main</STRONG> (Thumb, 1782 bytes, Stack size 144 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = main &rArr; CeruleanBird_EngineRender &rArr; Sprites_Exec &rArr; Sprites_SingleRender &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorldMap_Add
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Texture_Add
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_Sleep
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_Awaken
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesStatic_ObjectCreate
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_SetPosToCamera
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_SetDirWithCamera
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_Forward
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesIT_Enable
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesData_SetVerticalHeight
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_SwitchChain
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_SetAnimType
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_InsertNewFrm
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_CreateNewChain
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_CreateManager
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSR_SetCameraExecAnim
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSRAnim_Update
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSRAnim_SetPos
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSRAnim_ResetSingle
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSRAnim_RenderEnable
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSRAnim_ManagerCreate
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSRAnim_FrmAdd
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MistinkOP_GetBufferAPI
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MistinkOP_BufferReset
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MistinkDisplayer_Create
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MistinkDisplayer_BufferOutput
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M_String
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M_Int
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmRS_deltaTime_Init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmRS_GetFrmRate
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CeruleanBird_EngineRender
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Canvas_SetCanvasModeToRedirect
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_GetPos
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_ForwardMove
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_BackMove
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function4
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function3
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function2
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;function
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[a8]"></a>memory_pool_init</STRONG> (Thumb, 108 bytes, Stack size 4 bytes, heap_solution_1.o(i.memory_pool_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = memory_pool_init &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_crc8
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbInsert
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_malloc
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorldMap_Add
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Texture_Add
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MistinkDisplayer_Create
</UL>

<P><STRONG><a name="[da]"></a>rbDelete</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, rb_tree.o(i.rbDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = rbDelete &rArr; TreeDelete &rArr; DeleteRedLeafNode &rArr; c_free &rArr; verifyBlock &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TreeDelete
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesIT_RBStorageStrategyCreate
</UL>

<P><STRONG><a name="[c0]"></a>rbInsert</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, rb_tree.o(i.rbInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = rbInsert &rArr; createNode &rArr; c_malloc &rArr; memory_pool_init &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_pool_init
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createNode
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorldMap_Add
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Texture_Add
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesIT_Add
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesBT_Init
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_CreateManager
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSRAnim_ManagerCreate
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesIT_RBStorageStrategyCreate
</UL>

<P><STRONG><a name="[69]"></a>rightRotate</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, rb_tree.o(i.rightRotate))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustInsert
</UL>

<P><STRONG><a name="[95]"></a>rotateLeft</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rb_tree.o(i.rotateLeft))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteWhenHasRedNephews
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBlackLeafNodeWithRedSibling
</UL>

<P><STRONG><a name="[94]"></a>rotateRight</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rb_tree.o(i.rotateRight))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteWhenHasRedNephews
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBlackLeafNodeWithRedSibling
</UL>

<P><STRONG><a name="[be]"></a>search</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rb_tree.o(i.search))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorldMap_GetWorldMap
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Texture_GetTexture
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_ObjectCreate
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesStatic_ObjectCreate
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesIT_Register
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesIT_Enable
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesIT_Add
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesBT_MountToRoot
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesBT_Init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_InsertNewFrm
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_CreateNewChain
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSR_SetCameraExecAnim
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSRAnim_ManagerCreate
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSRAnim_FrmAdd
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesBT_BusExecute
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesIT_GetITNode
</UL>

<P><STRONG><a name="[b9]"></a>sqrt</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SBT_ExecuteHandle_4
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_SingleRender
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vector_Magnitude
</UL>

<P><STRONG><a name="[85]"></a>tan</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, tan.o(i.tan))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = tan &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Init
</UL>

<P><STRONG><a name="[86]"></a>vector_Create</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, vector.o(i.vector_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = vector_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vector_Normalize
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Init
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vector_Scalar_Div
</UL>

<P><STRONG><a name="[110]"></a>vector_Magnitude</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, vector.o(i.vector_Magnitude))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = vector_Magnitude &rArr; vector_MagnitudeSquare &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vector_MagnitudeSquare
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vector_Normalize
</UL>

<P><STRONG><a name="[111]"></a>vector_MagnitudeSquare</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, vector.o(i.vector_MagnitudeSquare))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = vector_MagnitudeSquare &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vector_Magnitude
</UL>

<P><STRONG><a name="[83]"></a>vector_Normalize</STRONG> (Thumb, 232 bytes, Stack size 56 bytes, vector.o(i.vector_Normalize))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = vector_Normalize &rArr; vector_Scalar_Div &rArr; vector_Create
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vector_Create
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vector_Scalar_Div
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vector_Magnitude
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_SetDir
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Init
</UL>

<P><STRONG><a name="[112]"></a>vector_Scalar_Div</STRONG> (Thumb, 104 bytes, Stack size 56 bytes, vector.o(i.vector_Scalar_Div))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = vector_Scalar_Div &rArr; vector_Create
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vector_Create
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vector_Normalize
</UL>

<P><STRONG><a name="[f4]"></a>verifyBlock</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, heap_solution_1.o(i.verifyBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = verifyBlock &rArr; calculate_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_crc8
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_realloc
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_free
</UL>

<P><STRONG><a name="[ce]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_Update
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesTree_Sort
</UL>

<P><STRONG><a name="[113]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[7c]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmRS_deltaTime_Trigger
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Render
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_Right
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_Left
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_Forward
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSRAnim_Update
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_ForwardMove
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SBT_ExecuteHandle_4
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_SingleRender
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesTree_Sort
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vector_MagnitudeSquare
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[116]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
</UL>

<P><STRONG><a name="[119]"></a>__fpl_dcheck_NaN1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>

<P><STRONG><a name="[11d]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dcmpi.o(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[84]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmRS_deltaTime_Trigger
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Render
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSRAnim_FrmAdd
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmRS_GetFrmRate
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;func2
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_SingleRender
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vector_Scalar_Div
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
</UL>

<P><STRONG><a name="[11b]"></a>_ddiv</STRONG> (Thumb, 552 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[10c]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11c]"></a>_dcmpeq</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[75]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Render
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_Right
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_Left
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_Forward
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_ForwardMove
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_BackMove
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_SingleRender
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[11e]"></a>_dfix</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[88]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vector_Normalize
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Render
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSRAnim_FrmAdd
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_SingleRender
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[161]"></a>_dflt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[ec]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;func2
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[162]"></a>_dfltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)

<P><STRONG><a name="[80]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vector_Normalize
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Render
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_SetDir
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmRS_GetFrmRate
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIT_MapIndexHandle
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SBT_ExecuteHandle_4
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_SingleRender
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vector_Scalar_Div
</UL>

<P><STRONG><a name="[11f]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[122]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
</UL>

<P><STRONG><a name="[74]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Render
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_Right
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_Left
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_Forward
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_ForwardMove
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_BackMove
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SBT_ExecuteHandle_4
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_SingleRender
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesTree_Sort
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vector_MagnitudeSquare
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[120]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[115]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[118]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[81]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vector_Normalize
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Render
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesMov_SetDir
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSRAnim_Update
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SBT_ExecuteHandle_IT
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_SingleRender
</UL>

<P><STRONG><a name="[121]"></a>_drcmple</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmple_InfNaN
</UL>

<P><STRONG><a name="[76]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Render
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_BackMove
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[123]"></a>_drsb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[10f]"></a>_dsqrt</STRONG> (Thumb, 456 bytes, Stack size 24 bytes, dsqrt_noumaal.o(x$fpl$dsqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[89]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Render
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSRAnim_Update
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SBT_ExecuteHandle_4
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sprites_SingleRender
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesTree_Sort
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[125]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[cf]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_Update
</UL>

<P><STRONG><a name="[126]"></a>_fadd</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[12b]"></a>__fpl_fcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fcmpi.o(x$fpl$fcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
</UL>

<P><STRONG><a name="[cd]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fdiv.o(x$fpl$fdiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_InsertNewFrm
</UL>

<P><STRONG><a name="[129]"></a>_fdiv</STRONG> (Thumb, 384 bytes, Stack size 16 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[cc]"></a>__aeabi_ui2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_InsertNewFrm
</UL>

<P><STRONG><a name="[163]"></a>_ffltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu), UNUSED)

<P><STRONG><a name="[e0]"></a>__aeabi_cfcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fleqf.o(x$fpl$fleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesTree_Sort
</UL>

<P><STRONG><a name="[12a]"></a>_fcmple</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, fleqf.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_Inf
</UL>

<P><STRONG><a name="[12d]"></a>__fpl_fcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fleqf.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frcmple
</UL>

<P><STRONG><a name="[128]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[114]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[d1]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_Update
</UL>

<P><STRONG><a name="[12c]"></a>_frcmple</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmple_InfNaN
</UL>

<P><STRONG><a name="[d0]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpritesAnim_Update
</UL>

<P><STRONG><a name="[12e]"></a>_fsub</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[11a]"></a>__fpl_return_NaN</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[ed]"></a>__ARM_scalbn</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn))
<BR><BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
</UL>

<P><STRONG><a name="[130]"></a>__fpl_cmpreturn</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[c4]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[c5]"></a>SetSysClockTo72</STRONG> (Thumb, 214 bytes, Stack size 12 bytes, system_stm32f10x.o(i.SetSysClockTo72))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[124]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[117]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[12f]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
</UL>

<P><STRONG><a name="[127]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[3b]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
